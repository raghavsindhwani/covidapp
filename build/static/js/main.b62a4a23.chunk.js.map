{"version":3,"sources":["modules/storage.js","modules/utils.js","modules/charts.js","modules/http.js","hoc/openCloseHoc.jsx","views/HeaderView.jsx","hoc/authHoc.js","views/LoginPageView.jsx","pages/login.jsx","views/ModalView.jsx","views/SelectView.jsx","views/ApiResponseView.jsx","views/ButtonWithLoader.jsx","views/TaskFormView.jsx","views/TaskAddArea.jsx","views/TaskAddCategory.jsx","store/ruducers/locationReducer.js","views/SubHeaderView.jsx","views/Tooltip.jsx","views/EditTaskView.jsx","views/RejectView.jsx","views/AcceptView.jsx","views/downloadreport.jsx","views/RecentTaskListView.jsx","store/ruducers/areaReducer.js","views/TaskAreaView.jsx","store/ruducers/categoryReducer.js","views/TaskCategoriesView.jsx","views/ChartView.jsx","pages/dashboard.jsx","pages/error.jsx","store/ruducers/index.js","store/index.js","pages/index.jsx","serviceWorker.js","index.js"],"names":["storage","token","tokenName","get","window","localStorage","getItem","this","set","value","setItem","clear","removeItem","userInfo","JSON","parse","stringify","utils","location","pathname","history","push","options","credits","enabled","legend","symbolHeight","symbolWidth","symbolRadius","verticalAlign","itemDistance","itemMarginTop","itemHoverStyle","color","itemStyle","fontSize","lineHeight","tooltip","pointFormat","chart","plotShadow","backgroundColor","plotBorderWidth","height","title","text","pie","payload","_data","map","i","status","count","checkvalue","some","type","plotOptions","dataLabels","borderWidth","colors","showInLegend","series","data","bar","_series","name","length","forEach","_day","column","stacking","xAxis","categories","yAxis","labels","gridLineWidth","Axios","defaults","baseURL","interceptors","request","use","config","_token","headers","Authorization","error","Promise","reject","response","resolve","message","http","userEmailVerification","post","userPasswordVerification","users","area","getAll","add","delete","id","category","getCommonApi","allusers","frequency","all","task","accept","put","edit","Download","OpenCloseHoc","props","onHandleClick","setState","isOpen","state","ref","React","createRef","parentRef","isEmpty","current","onBodyClick","document","addEventListener","e","contains","target","render","Component","defaultProps","noop","HeaderView","className","to","src","alt","width","Dropdown","firstName","lastName","onClick","AuthHoc","path","match","children","LoginPageView","userVerificationScreen","UserVerifyScreen","username","onInputChange","onUserVerificationSubmit","isLoading","isValidField","onSubmit","placeholder","required","onChange","currentTarget","PasswordVerifyScreen","password","onPasswordVerificationSubmit","verifiedUserName","LoginPage","preventDefault","then","catch","res","user","ModalView","closeHandler","SelectView","onSelect","_options","dataManipulation","defaultValue","key","displayLabel","categoryId","categoryName","areaId","areaName","ApiResponseView","ButtonWithLoader","showLoader","rest","disabled","connect","locationReducer","categoryReducer","areaReducer","allUsers","frequencies","locations","areas","useState","errorMessage","formData","taskDescription","location_id","manPower","assignToId","frequencyId","file","comments","taskCreatedById","taskCreationDate","taskUpdatedById","taskUpdatonDate","_","_formData","cloneDeep","parseInt","reload","min","form_data","FormData","append","files","console","log","actionsType","defaultState","selectedValue","dispatch","updateLocation","pageTitle","showTaskFrom","showAddarea","showAddItem","updateState","_prev","Fragment","Tooltip","rows","rowData","useEffect","locationId","toString","DownloadReport","downloadFile","axios","url","method","responseType","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","revokeObjectURL","loadData","objectList","row","TableBodyRow","EditTaskFrom","Accept","Reject","array","object","Object","assign","getValueByOptions","taskDate","role","deleteTask","rowId","alert","_option","find","deleteArea","view","hasDataShow","image","deleteCategories","ChartView","chartType","chartData","highcharts","Highcharts","DashBoardPage","TaskCategoriesView","NotFoundPage","goBack","rootReducers","combineReducers","action","_location","rootStore","createStore","Init","store","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b62a4a23.chunk.js","sourcesContent":["export const storage = {\n    token: {\n        tokenName: '_token',\n        get(){\n            const value = window.localStorage.getItem( this.tokenName );\n            return value;\n        },\n        set( value ) {\n            window.localStorage.setItem( this.tokenName, value );\n        },\n        clear() {\n            window.localStorage.removeItem( this.tokenName );\n        }\n\n    },\n    userInfo: {\n        tokenName: '_user',\n        get(){\n            const value = window.localStorage.getItem( this.tokenName );\n            return JSON.parse(value);\n        },\n        set( value ) {\n            window.localStorage.setItem( this.tokenName, JSON.stringify(value) );\n        },\n        clear() {\n            window.localStorage.removeItem( this.tokenName );\n        }\n\n    }\n};","import { storage } from \"./storage\";\nimport dateformat from 'dateformat';\n\nexport const utils = {\n    linkActive( location, pathname ) {\n        return location.pathname === pathname ? 'active' : '';\n    },\n    isAuthorizedUser() {\n        const _token = storage.token.get();\n        return _token != null;\n    },\n    userLogout( history ) {\n        storage.token.clear();\n        storage.userInfo.clear();\n        history.push( '/' );\n    },\n    dateFormate( d ) {\n        const now = new Date( d );\n        return dateformat(now, \"mmmm dS, yyyy hh:MM TT\");\n    }\n}","const options = {\n  credits: {\n    enabled: false,\n  },\n  legend:\n   {\n    symbolHeight: 10,\n    symbolWidth: 10,\n    symbolRadius: 10,\n    verticalAlign: \"bottom\",\n    itemDistance: 5,\n    itemMarginTop: 5,\n    itemHoverStyle: {\n      color: \"#000\",\n    },\n    itemStyle: {\n      color: \"#999\",\n      fontSize: \"10px\",\n      lineHeight: 20,\n    },\n  },\n  tooltip: {\n    pointFormat: \"<b>{point.y}</b>\",\n  },\n  chart: {\n    plotShadow: false,\n    backgroundColor: null,\n    plotBorderWidth: 0,\n    height: 250,\n  },\n  title: {\n    text: \"\",\n  },\n};\n\nexport const chart = {\n  pie(payload) {\n    const _data = payload.map((i) => {\n      return [i.status, i.count];\n    });\n   \n    const checkvalue = payload.some((i) =>{\n      return i.count !== 0;\n    });\n    // console.log(checkvalue)\n\n    let _options = {\n      ...options,\n\n      chart: {\n        ...options.chart,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          dataLabels: {\n            enabled: false,\n          },\n          borderWidth: 0,\n          colors: [\"#0099ff\", \"#33cc33\", \"#ffff00\"],\n          showInLegend: true,\n        },\n      },\n\n       series: checkvalue ? [{ data :  _data}] : []\n      \n      \n    };\n\n    return _options;\n  },\n  bar(payload) {\n    const _series = [\n      {\n        name: \"Pending\",\n        color: \"#0099ff\",\n        data: [],\n      },\n      {\n        name: \"Completed\",\n        color: \"#33cc33\",\n        data: [],\n      },\n      {\n        name: \"Upcoming\",\n        color: \"#ffff00\",\n        data: [],\n      },\n    ];\n    const _dump = [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"];\n    if (payload.length !== 0) {\n      _dump.forEach((i) => {\n        const _day = payload[0][i];\n        _series[0].data.push(_day[0].count);\n        _series[1].data.push(_day[1].count);\n        _series[2].data.push(_day[2].count);\n      });\n    }\n\n    let _options = {\n      ...options,\n      chart: {\n        ...options.chart,\n        type: \"column\",\n      },\n      tooltip: {\n        pointFormat:\n          '<span style=\"font-size:9px;\">{series.name}</span>: <b>{point.y}</b><br/>',\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n          borderWidth: 0,\n          dataLabels: {\n            enabled: true,\n          },\n        },\n      },\n      xAxis: {\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"],\n      },\n      yAxis: {\n        title: {\n          text: \"\",\n        },\n        labels: {\n          enabled: false,\n        },\n        gridLineWidth: 0,\n      },\n\n      series: _series \n      \n      // [{\n      //         name: 'Pending',\n      //         color: '#09554F',\n      //         data: [5, 3, 4, 7, 2]\n      //     }, {\n      //         name: 'Completed',\n      //         color: '#25D0C1',\n      //         data: [2, 2, 3, 2, 1]\n      //     }, {\n      //         name: 'Upcoming',\n      //         color: '#1DA89C',\n      //         data: [3, 4, 4, 2, 5]\n      //     }]\n\n      \n    };\n\n    return _options;\n  },\n};\n","import { storage } from \"./index\";\nimport Axios from \"axios\";\nAxios.defaults.baseURL = \"https://covid-compliance-application.herokuapp.com\";\n\nAxios.interceptors.request.use(\n  function (config) {\n    const _token = storage.token.get();\n\n    if (_token != null) {\n      config.headers.Authorization = `Bearer ${_token}`;\n    }\n\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nAxios.interceptors.response.use(\n  function (response) {\n    return Promise.resolve(response.data);\n  },\n  function (error) {\n    if (error.message === \"Network Error\" && !error.response) {\n      return Promise.reject({\n        status: \"failure\",\n        message: \"Network Not found.\",\n      });\n    } else if (error.response.status === 403) {\n      return Promise.reject({\n        status: \"failure\",\n        message: \"Network Not found.\",\n      });\n    } else {\n      return Promise.reject(error.response.data);\n    }\n  }\n);\n\nexport const http = {\n  userEmailVerification(data) {\n    return Axios.post(\"/username\", data);\n  },\n  userPasswordVerification(data) {\n    return Axios.post(\"/password\", data);\n  },\n  users() {\n    return Axios.get(\"/allusers\");\n  },\n  area: {\n    getAll() {\n      return Axios.get(\"/area\");\n    },\n    add(data) {\n      return Axios.post(\"/addArea\", data);\n    },\n    delete(id) {\n      return Axios.delete(`/delete/area/${id}`);\n    },\n  },\n  category: {\n    getAll() {\n      return Axios.get(\"/category\");\n    },\n    add(data) {\n      return Axios.post(\"/addCategory\", data);\n    },\n    delete(id) {\n      return Axios.delete(`/delete/category/${id}`);\n    },\n  },\n  getCommonApi() {\n    const location = Axios.get(\"/location\");\n    const allusers = Axios.get(\"/allusers\");\n    const frequency = Axios.get(\"/frequency\");\n\n    return Axios.all([location, allusers, frequency]);\n  },\n  task: {\n    getAll() {\n      return Axios.get(\"/allTasks\");\n    },\n    add(data) {\n      return Axios.post(\"/addTask\", data);\n    },\n    delete(id) {\n      return Axios.delete(`/delete/task/${id}`);\n    },\n    accept(data) {\n      return Axios.put(\"/update/task\", data);\n    },\n    reject(data) {\n      return Axios.put(\"/reject/task\", data);\n    },\n    edit(id, data) {\n      return Axios.put(`/edit/task/${id}`, data);\n    },\n  },\n  chart: {\n    pie() {\n      return Axios.get(\"/getPieChartsValues\");\n    },\n    bar() {\n      return Axios.get(\"/getBarGraphValues\");\n    },\n    Download() {\n      return Axios.get(\"/report\");\n    },\n  },\n};\n","import React from 'react';\nimport { isEmpty, noop } from 'lodash';\n\nexport default class OpenCloseHoc extends React.Component{\n\n    constructor( props ) {\n        super( props );\n        this.state = {\n            isOpen: props.isOpen\n        };\n        this.ref = React.createRef();\n        this.props.parentRef( this );\n    }\n\n    // static getDerivedStateFromProps( props ) {\n    //     if( props.isOpen !== nextProps.isOpen ) {\n    //         this.setState( { isOpen: nextProps.isOpen } );\n    //     }\n    // }\n\n    componentDidMount() {\n        if( ! isEmpty( this.ref.current ) ) {\n            this.onBodyClick();\n        }\n    }\n\n    onHandleClick = () => {\n        this.setState( { isOpen: !this.state.isOpen } );\n    }\n\n    onBodyClick() {\n        document.addEventListener( 'click', ( e ) => {\n            \n            if( ! isEmpty( this.ref.current ) ) {\n                \n                const _isOutSide = this.ref.current.contains( e.target );\n                if( ! _isOutSide ) {\n                    this.setState( { isOpen: false } );\n                }\n            }\n\n        } );\n    }\n\n    render() {\n        return this.props.render( {\n            ...this.state,\n            onHandleClick: this.onHandleClick,\n            ref: this.ref\n        } );\n    }\n\n}\n\nOpenCloseHoc.defaultProps = {\n    isOpen: false,\n    parentRef: noop\n};","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport OpenCloseHoc from '../hoc/openCloseHoc';\nimport { utils, storage } from '../modules';\n\n\nexport default class HeaderView extends React.Component {\n\n\n    state = {\n        userInfo: null\n    }\n\n    componentDidMount() {\n        this.setState({ userInfo: storage.userInfo.get() });\n    }\n\n\n    render() {\n\n        const { location, history } = this.props;\n\n        return (\n            <header className='header'>\n                <div className='header__logo'>\n                    <Link to='/dashboard'><img src='./images/Logo-white.svg' alt='Xebia' width='85' /></Link>\n                </div>\n                <div className='header__navigation'>\n                    <div className=''>\n                        <ul>\n                            <li className={utils.linkActive(location, '/dashboard')}>\n                                <Link to='/dashboard'>\n                                    <img src='./images/clock.svg' alt='Dashboard' width='15' />\n                                    <span>Dashboard</span>\n                                </Link>\n                            </li>\n                            <li className={utils.linkActive(location, '/listing')}>\n                                <Link to='/recentview'>\n                                    <img src='./images/clock.svg' alt='Dashboard' width='15' />\n                                    <span>My Tasks</span>\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className='header__userinfo'>\n                    <div className='header__userinfo__notification'>\n                        <img src='/images/bell.svg' alt='bell' width='20' />\n                        <span>3</span>\n                    </div>\n                    {this.state.userInfo === null ? null : <Dropdown  {...this.state} history={history} />}\n                </div>\n            </header>\n        );\n    }\n\n};\n\nconst Dropdown = (props) => {\n\n    const { userInfo, history } = props;\n    const { firstName, lastName } = userInfo;\n\n    return (\n        <OpenCloseHoc render={(payload) => {\n\n            const { isOpen, onHandleClick, ref } = payload;\n\n            return (\n                <div className='header__userinfo__profile' ref={ref}>\n                    <img src='/images/default-avatar.png' alt='avatar' width='20' onClick={onHandleClick} />\n                    {!isOpen ? null :\n                        <ul>\n                            <li>{firstName} {lastName}</li>\n                            <li onClick={() => utils.userLogout(history)}>Logout</li>\n                        </ul>\n                    }\n\n                </div>\n            );\n\n        }} />\n    );\n}","import React from 'react';\nimport { utils } from '../modules';\nimport Header from '../views/HeaderView';\nexport default class AuthHoc extends React.Component{\n\n    componentDidMount() {\n\n        const { history, location } = this.props;\n\n        if( ! utils.isAuthorizedUser() ) {\n            history.push( '/' );\n            \n        } else {\n            if( location.pathname !== '/' ) {\n                history.push( location.pathname );\n            } else {\n                history.push( '/dashboard' );\n            }\n        }\n    }\n\n    render() {\n\n        const { path } = this.props.match;\n\n        return(\n            <>\n                { path === '/' ? null : <Header { ...this.props }/>}\n                { this.props.children }\n            </> \n        );\n    }\n\n}","import React from 'react';\n\nexport default function LoginPageView(props) {\n\n    const { userVerificationScreen } = props;\n\n    return (\n        <div className='loginPage'>\n            <div className='loginPage__logo'>\n                <img src='/images/Logo.svg' alt='Xebia' />\n            </div>\n            <h3 className='heading heading--h3'>Login</h3>\n            {!userVerificationScreen ?\n                <UserVerifyScreen\n                    {...props}\n                /> :\n                <PasswordVerifyScreen\n                    {...props}\n                />\n            }\n        </div>\n    );\n\n}\n\n\nconst UserVerifyScreen = (payload) => {\n\n    const { username, onInputChange, onUserVerificationSubmit, isLoading, isValidField } = payload;\n\n    return (\n        <form onSubmit={onUserVerificationSubmit} className='card card__content'>\n            <h6 className='heading heading--h6'>Enter Email</h6>\n            <div className={`inputField ${isValidField ? '' : 'inputField--error'}`}>\n                <input type='email' className='inputField__input'\n                    value={username}\n                    placeholder='Enter your Official email id'\n                    required\n                    onChange={(e) => onInputChange({ username: e.currentTarget.value })}\n                />\n                <div className='inputField__message'>\n                    {isValidField ? 'You will receive an OTP on this email to continue to application.' : 'This email address is not registered with us, try with different one.'}\n                </div>\n                {isLoading ? <div className='loader' /> : null}\n            </div>\n            <button type='submit' className='btn btn__block btn__parimary'>Next</button>\n        </form>\n    );\n}\n\nconst PasswordVerifyScreen = (payload) => {\n\n    const { password, onInputChange, onPasswordVerificationSubmit, isLoading, isValidField, verifiedUserName } = payload;\n\n    return (\n        <form onSubmit={onPasswordVerificationSubmit} className='card card__content'>\n            <h6 className='heading heading--h6'>Enter OTP</h6>\n            <div className={`inputField ${isValidField ? '' : 'inputField--error'}`}>\n                <input type='password' className='inputField__input'\n                    value={password}\n                    placeholder='Enter one time password'\n                    required\n                    onChange={(e) => onInputChange({ password: e.currentTarget.value })}\n                />\n                <div className='inputField__message'>\n                    {isValidField ? 'You will receive an OTP on this email to continue to application.' : 'Please enter correct OTP.'}\n                </div>\n                {isLoading ? <div className='loader' /> : null}\n            </div>\n            <button type='submit' className='btn btn__disabled1 btn__block btn__parimary'>Login</button>\n            <div className='loginPage__message'>\n                Didn't receive the email? <span className='loginPage__message__link' onClick={verifiedUserName}>Resend the verification email.</span>\n            </div>\n        </form>\n    );\n}","import React from 'react';\nimport LoginPageView from '../views/LoginPageView';\nimport { http, storage } from '../modules';\n\nexport default class LoginPage extends React.Component {\n\n    state = {\n        isLoading: false,\n        userVerificationScreen: false,\n        isValidField: true,\n        username: '',\n        password: ''\n    }\n\n\n    onInputChange = (payload) => {\n        this.setState({ ...this.state, ...payload });\n    }\n\n    onUserVerificationSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ isLoading: true }, this.verifiedUserName);\n\n    }\n\n    verifiedUserName = () => {\n        const { username } = this.state;\n        http.userEmailVerification({ username }).then(() => {\n\n            this.setState({ isLoading: false, userVerificationScreen: true, isValidField: true });\n\n        }).catch(() => {\n            this.setState({ isLoading: false, isValidField: false });\n        });\n    }\n\n    onPasswordVerificationSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ isLoading: true }, () => {\n\n            const { password } = this.state;\n            http.userPasswordVerification({ password }).then(( res ) => {\n\n                const { token, user } = res.payload;\n                storage.token.set( token );\n                storage.userInfo.set( user );\n\n                this.props.history.push('/dashboard');\n    \n            }).catch(() => {\n                this.setState({ isLoading: false, isValidField: false });\n            });\n\n        });\n\n    }\n\n    render() {\n        return (\n            <LoginPageView\n                {...this.state}\n                onInputChange={this.onInputChange}\n                onUserVerificationSubmit={this.onUserVerificationSubmit}\n                verifiedUserName={this.verifiedUserName}\n                onPasswordVerificationSubmit={ this.onPasswordVerificationSubmit }\n            />\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default function ModalView( props ) {\n\n    const { closeHandler, title } = props;\n\n    return(\n        <div className='modal'>\n            <div className='modal__container'>\n                <div className='modal__head'>\n                    <h3 className='heading heading--h3'>{ title }</h3>\n                    <div className='modal__close' onClick={ closeHandler }>\n                        <img src='/images/close.svg' alt='close' />\n                    </div>\n                </div>\n                <div className='modal__body'>\n                    { props.children }\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function SelectView( payload ) {\n\n    const { options, type, value, onSelect, required } = payload;\n    const _options = dataManipulation( options, type );\n\n    return (\n        <div className='inputField'>\n            <select className='inputField__select' onChange={ onSelect } defaultValue={ value } required={ required } >\n                <option value=''>Select</option>\n                {\n                    _options.map( ( i ) => {\n                        return(\n                            <option\n                                key={ i.value }\n                                value={ i.value }\n                            >\n                                { i.displayLabel }\n                            </option>\n                        );\n                    } )\n                }\n            </select>\n        </div>\n    );\n\n}\n\nSelectView.defaultProps = {\n    required: false\n};\n\nconst dataManipulation = ( options, type ) => {\n\n    switch( type ) {\n\n        case 'location': {\n\n            return options && options.map( ( i ) => ({ value: i.id, displayLabel: i.location }) );\n\n        }\n\n        case 'allUser': {\n\n            return options && options.map( ( i ) => ({ value: i.id, displayLabel: i.username }) );\n\n        }\n\n        case 'frequency': {\n\n            return options && options.map( ( i ) => ({ value: i.id, displayLabel: i.frequency }) );\n\n        }\n\n        case 'category': {\n\n            return options && options.map( ( i ) => ({ value: i.categoryId, displayLabel: i.categoryName }) );\n\n        }\n\n        case 'area': {\n\n            return options && options.map( ( i ) => ({ value: i.areaId, displayLabel: i.areaName }) );\n\n        }\n\n        case 'download': {\n\n            return [ {\n                value: '0',\n                displayLabel: 'Download Report'\n            } ]\n\n        }\n\n        default: {\n            return [];\n        }\n\n    }\n}","import React from 'react';\n\nexport default function ApiResponseView( payload ) {\n\n    const { message } = payload;\n\n    return(\n        <div className='modal__message'>\n            { message }\n        </div>\n    );\n\n}","import React from 'react';\n\nexport default function ButtonWithLoader( payload ) {\n\n    const { children, showLoader, ...rest } = payload;\n\n    return(\n        <button { ...rest } disabled={ showLoader }>\n            { showLoader ? <div className='loader' /> : null }\n            <div>{ children }</div>\n        </button>\n    );\n\n}\n\nButtonWithLoader.defaultProps = {\n    showLoader: false\n};","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport SelectView from './SelectView';\nimport ApiResponseView from './ApiResponseView';\nimport ButtonWithLoader from './ButtonWithLoader';\nimport { http } from '../modules';\nimport _ from 'lodash';\n\nfunction TaskFormView( payload ) {\n    \n    const [ state, setState ] = useState( {\n        isLoading: false,\n        errorMessage: '',\n        formData: {\n            taskDescription: '',\n            location_id: '',\n            manPower: '',\n            assignToId: '',\n            categoryId: '',\n            areaId: '',\n            frequencyId: '',\n            file: '',\n            comments: '',\n            status: 'Upcoming',\n            taskCreatedById: '',\n            taskCreationDate: '',\n            taskUpdatedById: '',\n            taskUpdatonDate: ''\n        }\n    } );\n\n    const { formData } = state;\n    const { locations, allUsers, frequencies, categories, areas } = payload;\n\n    const onTaskSubmit = ( e ) => {\n        e.preventDefault();\n\n        setState( { ...state, isLoading: true } );\n\n        const _formData = _.cloneDeep( formData );\n        _formData.taskCreatedById = _formData.assignToId;\n        _formData.taskUpdatedById = _formData.assignToId;\n        _formData.areaId = parseInt( _formData.areaId );\n        _formData.manPower = parseInt( _formData.manPower );\n\n        http.task.add( _formData ).then( ( response ) => {\n\n            setState( { ...state, errorMessage: response.message } );\n            window.location.reload();\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, errorMessage: e.message } );\n\n        } );\n\n    }\n\n    if( !_.isEmpty( state.errorMessage ) ) {\n\n        return(\n            <ApiResponseView message={ state.errorMessage } />\n        );\n\n    } else {\n        return(\n            <form onSubmit={ onTaskSubmit } className='taskForm'>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Brief</h6>\n                        <div className='inputField'>\n                            <input type='text' className='inputField__input' \n                                value={ formData.taskDescription }\n                                onChange={ (e) => {\n                                    setState( { ...state, formData: { ...state.formData, taskDescription: e.currentTarget.value } } );\n                                } }\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Location</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: formData.location_id,\n                                type: 'location',\n                                options: locations,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, location_id: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Man Power</h6>\n                        <div className='inputField'>\n                            <input type='number' min='1' className='inputField__input' \n                                value={ formData.manPower }\n                                onChange={ (e) => {\n                                    setState( { ...state, formData: { ...state.formData, manPower: e.currentTarget.value } } );\n                                } }\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Assign to</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: formData.assignToId,\n                                type: 'allUser',\n                                options: allUsers,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, assignToId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Area</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: formData.areaId,\n                                type: 'area',\n                                options: areas,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, areaId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Frequency</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: formData.frequencyId,\n                                type: 'frequency',\n                                options: frequencies,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, frequencyId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Category</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: formData.categoryId,\n                                type: 'category',\n                                options: categories,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, categoryId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>&nbsp;</div>\n                    <div className='grid--6 text-right'>\n                        <ButtonWithLoader\n                            showLoader={ state.isLoading }\n                            className='btn btn__parimary'\n                            type='submit'\n                        >\n                            Save\n                        </ButtonWithLoader>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n\n}\n\nexport default connect( ( { locationReducer, categoryReducer, areaReducer } ) => {\n\n    const { allUsers, frequencies, locations } = locationReducer;\n    const { categories } = categoryReducer;\n    const { areas } = areaReducer;\n\n    return {\n        allUsers,\n        frequencies,\n        locations,\n        categories,\n        areas\n    };\n}, null )( TaskFormView );","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport SelectView from './SelectView';\nimport ApiResponseView from './ApiResponseView';\nimport ButtonWithLoader from './ButtonWithLoader';\nimport { http } from '../modules';\nimport _ from 'lodash';\n\nfunction TaskAddArea( payload ) {\n\n    const [ state, setState ] = useState( {\n        isLoading: false,\n        errorMessage: '',\n        formData: {\n            location_id: '',\n            area: '',\n            file: ''\n        }\n    } );\n\n    const { locations } = payload;\n    const { formData, errorMessage } = state;\n\n    \n\n    const onFormSubmit = ( e ) => {\n        e.preventDefault();\n        setState( { ...state, isLoading: true } );\n        \n        var form_data = new FormData();\n\n        form_data.append('file',formData['file'])\n        form_data.append('area',JSON.stringify({'area':formData['area'],'location_id':formData['location_id']}))\n\n        // console.log(form_data)\n\n        http.area.add( form_data ).then( ( response ) => {\n\n            setState( { ...state, errorMessage: response.message } );\n            window.location.reload();\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, errorMessage: e.message } );\n\n        } );\n\n    }\n    \n    if( !_.isEmpty( errorMessage ) ) {\n\n        return(\n            <ApiResponseView message={ errorMessage } />\n        );\n\n    }\n\n    return (\n        <form onSubmit={ onFormSubmit } className='taskForm'>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Area Name</h6>\n                    <div className='inputField'>\n                        <input type='text' className='inputField__input' \n                            value={ formData.area }\n                            onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, area: e.currentTarget.value } } ) }\n                            required\n                        />\n                    </div>\n                </div>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Location</h6>\n                    <SelectView\n                        { ...{\n                            required: true,\n                            value: formData.location_id,\n                            type: 'location',\n                            options: locations,\n                            onSelect:(e) => {\n                                setState( { ...state, formData: { ...state.formData, location_id: e.currentTarget.value } } );\n                            }\n                        } }\n                    />\n                </div>\n            </div>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Image</h6>\n                    <div className='inputField'>\n                        <label className=\"custom-file-upload\">\n                            <input type='file' className='inputField__file'\n                                // value={ formData.file }\n                                onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, file: e.currentTarget.files[0] } } ) }\n                            />\n                            {console.log(state.formData)}\n                            Upload\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className='grid'>\n                <div className='grid--6'>&nbsp;</div>\n                <div className='grid--6 text-right'>\n                        <ButtonWithLoader\n                            showLoader={ state.isLoading }\n                            className='btn btn__parimary'\n                            type='submit'\n                        >\n                            Save\n                        </ButtonWithLoader>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default connect( ( { locationReducer, } ) => {\n\n    const { locations } = locationReducer;\n\n    return {\n        locations,\n    };\n}, null )( TaskAddArea );","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport SelectView from './SelectView';\nimport ApiResponseView from './ApiResponseView';\nimport ButtonWithLoader from './ButtonWithLoader';\nimport { http } from '../modules';\nimport _ from 'lodash';\n\nfunction TaskAddCategory( payload ) {\n\n    const [ state, setState ] = useState( {\n        isLoading: false,\n        errorMessage: '',\n        formData: {\n            location_id: '',\n            category: '',\n            file: ''\n        }\n    } );\n\n    const { locations } = payload;\n    const { formData, errorMessage } = state;\n\n    const onFormSubmit = ( e ) => {\n        e.preventDefault();\n        setState( { ...state, isLoading: true } );\n\n        var form_data = new FormData();\n\n        form_data.append('file',formData['file'])\n        form_data.append('category',JSON.stringify({'category':formData['category'],'location_id':formData['location_id']}))\n\n\n        http.category.add( form_data ).then( ( response ) => {\n\n            setState( { ...state, errorMessage: response.message } );\n            window.location.reload();\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, errorMessage: e.message } );\n\n        } );\n\n    }\n\n    if( !_.isEmpty( errorMessage ) ) {\n\n        return(\n            <ApiResponseView message={ errorMessage } />\n        );\n\n    }\n\n    return (\n        <form onSubmit={ onFormSubmit } className='taskForm'>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Category Name</h6>\n                    <div className='inputField'>\n                        <input type='text' className='inputField__input' \n                            value={ formData.category }\n                            onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, category: e.currentTarget.value } } ) }\n                            required\n                        />\n                    </div>\n                </div>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Location</h6>\n                    <SelectView\n                        { ...{\n                            required: true,\n                            value: formData.location_id,\n                            type: 'location',\n                            options: locations,\n                            onSelect:(e) => {\n                                setState( { ...state, formData: { ...state.formData, location_id: e.currentTarget.value } } );\n                            }\n                        } }\n                    />\n                </div>\n            </div>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Image</h6>\n                    <div className='inputField'>\n                        <label className=\"custom-file-upload\">\n                            <input type='file' className='inputField__file'\n                                // value={ formData.file }\n                                onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, file: e.currentTarget.files[0] } } ) }\n                            />\n                            Upload\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className='grid'>\n                <div className='grid--6'>&nbsp;</div>\n                <div className='grid--6 text-right'>\n                        <ButtonWithLoader\n                            showLoader={ state.isLoading }\n                            className='btn btn__parimary'\n                            type='submit'\n                        >\n                            Save\n                        </ButtonWithLoader>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default connect( ( { locationReducer, } ) => {\n\n    const { locations } = locationReducer;\n\n    return {\n        locations,\n    };\n}, null )( TaskAddCategory );","import { storage } from '../../modules';\n\nexport const actionsType = {\n    LOAD_DATA: 'ALL::LOCATIONS:LOAD:DATA',\n    UPDATE_LOCATION: 'ALL::LOCATIONS:UPDATE:LOCATION',\n    NETWORK_ERROR: 'ALL:LOCATIONS:NETWORK_ERROR'\n};\n\nconst defaultState = {\n    isLoading: true,\n    locations: [],\n    allUsers: [],\n    frequencies: [],\n    selectedValue: '',\n    errorMessage: ''\n};\n\nexport function locationReducer( state = defaultState, action ) {\n\n    const { type, data } = action;\n\n    switch ( type ) {\n\n        case actionsType.LOAD_DATA : {\n\n            return {\n                ...state,\n                isLoading: false,\n                locations: data[0].payload.objectList,\n                allUsers: data[1].payload.objectList,\n                frequencies: data[2].payload.objectList,\n            };\n\n        }\n\n        case actionsType.UPDATE_LOCATION: {\n            \n            return {\n                ...state,\n                selectedValue: data\n            };\n\n        }\n\n        case actionsType.NETWORK_ERROR: {\n\n            return {\n                ...state,\n                isLoading: false,\n                errorMessage: data\n            }\n\n        }\n        \n\n        default : {\n            \n            const _location = storage.userInfo.get() && storage.userInfo.get().location;\n\n            return {\n                ...state,\n                selectedValue: _location\n            };\n        }\n\n    }\n\n}","import React, { useState,useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { http } from '../modules';\nimport ModalView from '../views/ModalView';\nimport TaskFormView from '../views/TaskFormView';\nimport TaskAddArea from '../views/TaskAddArea';\nimport TaskAddCategory from '../views/TaskAddCategory';\nimport { actionsType } from '../store/ruducers/locationReducer';\nimport SelectView from '../views/SelectView';\nimport axios from 'axios';\n\n\nfunction SubHeaderView( props ) {\n\n    const { pageTitle, locations, selectedValue, updateLocation } = props;\n\n    const [ state, setState ] = useState( { \n        showTaskFrom: false,\n        showAddarea: false,\n        showAddItem: false\n    } );\n\n    const updateState = ( payload ) => {\n        setState( ( _prev ) => ( { ..._prev, ...payload } ) );\n    }\n\n    return(\n        <React.Fragment>\n            <div className='subHeader'>\n                <div className='container'>\n                    <div className='subHeader__inner'>\n                        <div className='subHeader__left'>\n                            <h3 className='heading heading--h3'>{ pageTitle }</h3>\n                        </div>\n                        <div className='subHeader__right'>\n                            <SelectView \n                                { ...{\n                                    type: 'location',\n                                    options: locations,\n                                    value: selectedValue,\n                                    onSelect: updateLocation\n                                }}\n                            />\n                            <button\n                                className='btn btn__parimary'\n                                onClick={ () => updateState( { showTaskFrom: !state.showTaskFrom } ) }\n                            >Add Task</button>\n                             <button\n                                className='btn btn__parimary'\n                                onClick={ () => updateState( { showAddarea: !state.showAddarea } ) }\n                            >Add Area</button>\n                             <button\n                                className='btn btn__parimary'\n                                onClick={ () => updateState( { showAddItem: !state.showAddItem } ) }\n                            >Add Category</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            { !state.showTaskFrom ? null :\n                <ModalView\n                    closeHandler={ () => updateState( { showTaskFrom: !state.showTaskFrom } ) }\n                    title='Add Task'\n                >\n                    <TaskFormView />\n                </ModalView>\n            }\n             { !state.showAddarea ? null :\n                <ModalView\n                    closeHandler={ () => updateState( { showAddarea: !state.showAddarea } ) }\n                    title='Add Area'\n                >\n                    <TaskAddArea />\n                </ModalView>\n            }\n             { !state.showAddItem ? null :\n                <ModalView\n                    closeHandler={ () => updateState( { showAddItem: !state.showAddItem } ) }\n                    title='Add Category'\n                >\n                    <TaskAddCategory />\n                </ModalView>\n            }\n        </React.Fragment>\n    );\n}\n\nexport default connect( \n    ( { locationReducer } ) => {\n        return locationReducer;\n    }, ( dispatch ) => {\n\n        http.getCommonApi().then( ( data ) => {\n\n            dispatch( {\n                type: actionsType.LOAD_DATA,\n                data\n            } );\n\n        } ).catch( ( e ) => {\n\n            dispatch( {\n                type: actionsType.NETWORK_ERROR,\n                data: e.message\n            } );\n\n        } );\n\n        return {\n            updateLocation: ( e ) => {\n                dispatch( { type: actionsType.UPDATE_LOCATION, data: e.currentTarget.value } )\n            }\n        };\n\n    } )( SubHeaderView );","import React from 'react';\n\nexport default function Tooltip( props ) {\n\n    const { children, title } = props;\n\n    return(\n        <div className='tooltip'>\n            <div className='tooltip__title'>{ title }</div>\n            <div className='tooltip__content'>\n                { children }\n            </div>\n        </div>\n    );\n\n}","import React, { useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport SelectView from './SelectView';\nimport ApiResponseView from './ApiResponseView';\nimport ButtonWithLoader from './ButtonWithLoader';\nimport { http } from '../modules';\nimport _ from 'lodash';\n\n function EditTaskView( payload ) {\n    \n    const [ state, setState ] = useState( {\n        isLoading: false,\n        errorMessage: '',\n        rows:[],\n        formData: {\n            taskDescription: '',\n            location_id: '',\n            manPower: '',\n            assignToId: '',\n            categoryId: '',\n            areaId: '',\n            frequencyId: '',\n            file: '',\n            comments: '',\n            status: 'Upcoming',\n            taskCreatedById: '',\n            taskCreationDate: '',\n            taskUpdatedById: '',\n            taskUpdatonDate: ''\n        }\n    } );\n\n    const { formData,rows } = state;\n    const { locations, allUsers, frequencies, categories, areas, rowData } = payload;\n\n    const loadData = () => {\n        http.task.getAll().then( ( response ) => {\n            \n            const rows=response.payload.objectList;\n            // console.log(rows)\n            setState( { ...state, rows: rows, isLoading: false } );\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, isLoading: false, errorMessage: e.message } );\n\n        } );\n    };\n\n    useEffect( () => {\n        setState({\n            formData: {\n                taskDescription: rowData.taskDescription,\n                locationId: rowData.locationId,\n                manPower: rowData.manPower,\n                categoryId: rowData.categoryId,\n                areaId: rowData.areaId,\n                frequencyId: rowData.frequencyId,\n                assignToId: rowData.assignToId\n            }\n        })\n    }, [] );\n\n\n    const onTaskSubmit = ( e ) => {\n        e.preventDefault();\n\n        setState( { ...state, isLoading: true } );\n\n        const _formData = _.cloneDeep( formData );\n        _formData.taskCreatedById = _formData.assignToId;\n        _formData.taskUpdatedById = _formData.assignToId;\n        _formData.areaId = parseInt( _formData.areaId );\n        _formData.manPower = parseInt( _formData.manPower );\n\n        http.task.edit( rowData.id,_formData ).then( ( response ) => {\n\n            setState( { ...state, errorMessage: response.message } );\n            window.location.reload();\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, errorMessage: e.message } );\n\n        } );\n\n    }\n\n    const handlechange = () =>{\n\n    }\n\n    if( !_.isEmpty( state.errorMessage ) ) {\n\n        return(\n            <ApiResponseView message={ state.errorMessage } />\n        );\n\n    } else {\n        return(\n            <form onSubmit={ onTaskSubmit } className='taskForm'>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Brief</h6>\n                        <div className='inputField'>\n                            <input type='text' className='inputField__input' \n                                defaultValue={ rowData.taskDescription }\n                                onChange={ (e) => {\n                                    setState( { ...state, formData: { ...state.formData, taskDescription: e.currentTarget.value } } );\n                                    handlechange(e.target.value)\n                                } }\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Location</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: rowData.locationId,\n                                type: 'location',\n                                options: locations,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, location_id: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Man Power</h6>\n                        <div className='inputField'>\n                            <input type='number' min='1' className='inputField__input' \n                                defaultValue={ rowData.manPower }\n                                onChange={ (e) => {\n                                    setState( { ...state, formData: { ...state.formData, manPower: e.currentTarget.value } } );\n                                } }\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Assign to</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: rowData.assignToId,\n                                type: 'allUser',\n                                options: allUsers,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, assignToId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Area</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: rowData.areaId,\n                                type: 'area',\n                                options: areas,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, areaId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Frequency</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: rowData.frequencyId,\n                                type: 'frequency',\n                                options: frequencies,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, frequencyId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>\n                        <h6 className='heading heading--h6'>Category</h6>\n                        <SelectView\n                            { ...{\n                                required: true,\n                                value: rowData.categoryId,\n                                type: 'category',\n                                options: categories,\n                                onSelect:(e) => {\n                                    setState( { ...state, formData: { ...state.formData, categoryId: e.currentTarget.value } } );\n                                }\n                            } }\n                        />\n                    </div>\n                </div>\n                <div className='grid'>\n                    <div className='grid--6'>&nbsp;</div>\n                    <div className='grid--6 text-right'>\n                        <ButtonWithLoader\n                            showLoader={ state.isLoading }\n                            className='btn btn__parimary'\n                            type='submit'\n                        >\n                            Save\n                        </ButtonWithLoader>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n\n}\n\n\nexport default connect( ( { locationReducer, categoryReducer, areaReducer } ) => {\n\n    const { allUsers, frequencies, locations } = locationReducer;\n    const { categories } = categoryReducer;\n    const { areas } = areaReducer;\n\n    return {\n        allUsers,\n        frequencies,\n        locations,\n        categories,\n        areas\n    };\n}, null )( EditTaskView );\n\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport SelectView from './SelectView';\nimport ApiResponseView from './ApiResponseView';\nimport ButtonWithLoader from './ButtonWithLoader';\nimport { http } from '../modules';\nimport _ from 'lodash';\n\nfunction RejectView( payload ) {\n\n    const [ state, setState ] = useState( {\n        isLoading: false,\n        errorMessage: '',\n        formData: {\n            comments: '',\n        }\n    } );\n\n    const { locations,rowData } = payload;\n    const { formData, errorMessage } = state;\n\n    \n\n    const onFormSubmit = ( e ) => {\n        e.preventDefault();\n        setState( { ...state, isLoading: true } );\n        \n        var form_data = new FormData();\n\n    \n        form_data.append('task',JSON.stringify({\"task_id\":rowData.toString(),\"comment\":formData['comments']}))\n\n        // console.log(form_data)\n\n        http.task.reject( form_data ).then( ( response ) => {\n\n            setState( { ...state, errorMessage: response.message } );\n            window.location.reload();\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, errorMessage: e.message } );\n\n        } );\n\n    }\n    \n    if( !_.isEmpty( errorMessage ) ) {\n\n        return(\n            <ApiResponseView message={ errorMessage } />\n        );\n\n    }\n\n    return (\n        <form onSubmit={ onFormSubmit } className='taskForm'>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Comments</h6>\n                    <div className='inputField'>\n                        <input type='text' className='inputField__input' \n                            value={ formData.area }\n                            onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, comments: e.currentTarget.value } } ) }\n                            required\n                        />\n                    </div>\n                </div>\n\n            </div>\n            <div className='grid'>\n                <div className='grid--6'>&nbsp;</div>\n                <div className='grid--6 text-right'>\n                        <ButtonWithLoader\n                            showLoader={ state.isLoading }\n                            className='btn btn__parimary'\n                            type='submit'\n                        >\n                            Save\n                        </ButtonWithLoader>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default connect( ( { locationReducer, } ) => {\n\n    const { locations } = locationReducer;\n\n    return {\n        locations,\n    };\n}, null )( RejectView );","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport SelectView from './SelectView';\nimport ApiResponseView from './ApiResponseView';\nimport ButtonWithLoader from './ButtonWithLoader';\nimport { http } from '../modules';\nimport _ from 'lodash';\n\nfunction AcceptView( payload ) {\n\n    const [ state, setState ] = useState( {\n        isLoading: false,\n        errorMessage: '',\n        formData: {\n            comments: '',\n            file: ''\n        }\n    } );\n\n    const { locations,rowData } = payload;\n    const { formData, errorMessage } = state;\n\n    \n\n    const onFormSubmit = ( e ) => {\n        e.preventDefault();\n    \n        setState( { ...state, isLoading: true } );\n        \n        var form_data = new FormData();\n\n        form_data.append('file',formData['file'])\n        form_data.append('task',JSON.stringify({\"task_id\":rowData.toString(),\"comment\":formData['comments']}))\n\n        console.log(form_data)\n\n        http.task.accept( form_data ).then( ( response ) => {\n\n            setState( { ...state, errorMessage: response.message } );\n            window.location.reload();\n            console.log(response)\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, errorMessage: e.message } );\n\n        } );\n\n    }\n    \n    if( !_.isEmpty( errorMessage ) ) {\n\n        return(\n            <ApiResponseView message={ errorMessage } />\n        );\n\n    }\n\n    return (\n        <form onSubmit={ onFormSubmit } className='taskForm'>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Comments</h6>\n                    <div className='inputField'>\n                        <input type='text' className='inputField__input' \n                            value={ formData.comments}\n                            onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, comments: e.currentTarget.value } } ) }\n                            required\n                        />\n                    </div>\n                </div>\n                \n            </div>\n            <div className='grid'>\n                <div className='grid--6'>\n                    <h6 className='heading heading--h6'>Image</h6>\n                    <div className='inputField'>\n                        <label className=\"custom-file-upload\">\n                            <input type='file' className='inputField__file'\n                                // value={ formData.file }\n                                onChange={ ( e ) => setState( { ...state, formData: { ...state.formData, file: e.currentTarget.files[0] } } ) }\n                            />\n                            {console.log(state.formData)}\n                            Upload\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className='grid'>\n                <div className='grid--6'>&nbsp;</div>\n                <div className='grid--6 text-right'>\n                        <ButtonWithLoader\n                            showLoader={ state.isLoading }\n                            className='btn btn__parimary'\n                            type='submit'\n                        >\n                            Save\n                        </ButtonWithLoader>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default connect( ( { locationReducer, } ) => {\n\n    const { locations } = locationReducer;\n\n    return {\n        locations,\n    };\n}, null )( AcceptView );","import React from 'react';\nimport axios from 'axios';\n\n\nconst DownloadReport = () => {\n\n    return(\n        <img className='commonbx__download' src='/images/download.svg' width=\"20px\" title=\"Download Report\" onClick={ downloadFile } alt='download'  />\n    );\n}\n\nexport default DownloadReport;\n\nconst downloadFile = () => {\n\n    axios({\n        url: \"https://covid-compliance-application.herokuapp.com/report\",\n        method: 'GET',\n        responseType: 'blob', // important\n      }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response] ));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'DownloadFile.xls');\n        document.body.appendChild(link);\n        link.click();\n        window.URL.revokeObjectURL(url);\n      });\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '../views/Tooltip';\nimport SelectView from '../views/SelectView';\nimport { http, utils } from '../modules';\nimport _ from 'lodash';\nimport EditFormView from './EditTaskView';\nimport ModalView from '../views/ModalView';\nimport RejectView from './RejectView';\nimport AcceptView from './AcceptView';\nimport Downloadreport from './downloadreport'\n\nfunction RecentTaskListView( props ) {\n\n    const [ state, setState ] = useState( {\n        isLoading: true,\n        rows: [],\n        users:[],\n        errorMessage: ''\n    } );\n\n    \n\n    const loadData = () => {\n        http.task.getAll().then( ( response ) => {\n            setState( { ...state, rows: response.payload.objectList, isLoading: false } );\n\n        } ).catch( ( e ) => {\n\n            setState( { ...state, isLoading: false, errorMessage: e.message } );\n\n        } );\n    };\n    \n    useEffect( () => loadData(), [] );\n\n    const { rows } = state;\n\n    return (\n        <div className='card card--mb20'>\n            <div className='grid-inner'>\n                <h4 className='heading--h4'>Upcoming Task</h4>\n                \n                 \n                  <Downloadreport />\n            </div>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>Subject</th>\n                        <th>Area</th>\n                        <th>Assign To</th>\n                        <th>Stauts</th>\n                        <th>Task Date</th>\n                        <th>Actions</th>\n                        <th>Comments</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {   \n                       rows.length === 0 ? null : rows.map(( row ) => {\n                            return(\n                                <TableBodyRow\n                                    key={ row.id }\n                                    rowData={ row }\n                                    { ...props }\n                                    reload={ loadData }\n                                />\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n\n}\n\nexport default connect( ( { locationReducer, categoryReducer, areaReducer } ) => {\n\n    const { allUsers, frequencies, locations } = locationReducer;\n    const { categories } = categoryReducer;\n    const { areas } = areaReducer;\n\n    return {\n        allUsers,\n        frequencies,\n        locations,\n        categories,\n        areas\n    };\n}, null )( RecentTaskListView );\n\nconst TableBodyRow = ( payload ) => {\n\n\n    \n    const [ state, setState ] = useState( { \n        EditTaskFrom: false,\n        Accept: false,\n        Reject:false,\n        users: [],\n    } );\n\n    const updateState = ( payload ) => {\n        setState( ( _prev ) => ( { ..._prev, ...payload } ) );\n    }\n\n    const { rowData, areas, allUsers, reload } = payload;\n\nvar array = allUsers,\n    object = Object.assign({}, ...array);\n    \n   \n    return (\n        <>\n        <tr>\n            <td className='cursorPointer'><Link to='/detail'>{ rowData.taskDescription }</Link></td>\n            <td>{ getValueByOptions( 'area', rowData.areaId, areas ) }</td>\n            <td>{ getValueByOptions( 'assignTo', rowData.assignToId, allUsers ) }</td>\n            <td>{ rowData.status }</td>\n            <td>{ (rowData.taskDate)}</td>\n           \n            <td>\n              \n                {rowData.status===(\"Upcoming\")  ? \n                <>\n                <Tooltip title='Approved'>\n                    <div className='table__icon'  onClick={ () => updateState( { Accept: !state.Accept } ) }>\n                        <img src='/images/check.svg' alt='approved' />\n                    </div>\n                </Tooltip>\n                <Tooltip title='Reject'>\n                    <div className='table__icon'  onClick={ () => updateState( { Reject: !state.Reject } ) }>\n                        <img src='/images/close.svg' alt='approved' />\n                    </div>\n                </Tooltip></> : null\n                }   \n                 {rowData.status===(\"Pending\")  ? \n                <>\n                <Tooltip title='Approved'>\n                    <div className='table__icon'  onClick={ () => updateState( { Accept: !state.Accept } ) }>\n                        <img src='/images/check.svg' alt='approved' />\n                    </div>\n                </Tooltip>\n                <Tooltip title='Reject'>\n                    <div className='table__icon'  onClick={ () => updateState( { Reject: !state.Reject } ) }>\n                        <img src='/images/close.svg' alt='approved' />\n                    </div>\n                </Tooltip></> : null\n                }   \n                <Tooltip title='Edit'>\n                    <div className='table__icon'   onClick={ () => updateState( { EditTaskFrom: !state.EditTaskFrom } ) }>\n                        <img src='/images/edit.svg' alt='approved' />\n                    </div>\n                </Tooltip>\n                {object.role===\"ROLE_SUPERADMIN\" ?\n                <>\n                <Tooltip title='Delete'>\n                    <div className='table__icon' onClick={ () => deleteTask( rowData.id, reload ) }>\n                        <img src='/images/trash.svg' alt='approved' />\n                    </div>\n                </Tooltip></> : null\n                }\n            </td>\n            <td>\n                {rowData.comments ? rowData.comments : \"Awaiting action\"}\n            </td>\n        </tr>\n        { !state.EditTaskFrom ? null :\n            <ModalView\n                closeHandler={ () => updateState( { EditTaskFrom: !state.EditTaskFrom } ) }\n                title='Edit Task'\n            >\n                <EditFormView rowData={rowData}/>\n            </ModalView>\n        }\n        { !state.Reject ? null :\n            <ModalView\n                closeHandler={ () => updateState( { Reject: !state.Reject } ) }\n                title='Reject Task'\n            >\n                <RejectView rowData={rowData.id}/>\n            </ModalView>\n        }\n        { !state.Accept ? null :\n            <ModalView\n                closeHandler={ () => updateState( { Accept: !state.Accept } ) }\n                title='Accept Task'\n            >\n                <AcceptView rowData={rowData.id}/>\n            </ModalView>\n        }\n        </>\n    );\n}\n\n\nconst deleteTask = ( rowId, reload ) => {\n    http.task.delete( rowId ).then( ( response ) => {\n        alert( response.message );\n        reload();\n    } );\n\n};\n\nconst getValueByOptions = ( type, value, options ) => {\n\n    switch( type ) {\n        case 'area' : {\n\n            const _option = options.find( ( i ) => {\n                return i.areaId === value;\n            } );\n\n            return _.get( _option, 'areaName', '-' );\n\n        }\n        case 'assignTo' : {\n\n            const _option = options && options.find( ( i ) => {\n                return i.id === value;\n            } );\n\n            return _.get( _option, 'username', '-' );\n\n        }\n    }\n\n}\n","export const actionsType = {\n    LOAD_DATA: 'ALL::AREA:LOAD:DATA',\n    UPDATE_LOCATION: 'ALL::AREA:UPDATE:LOCATION',\n    NETWORK_ERROR: 'ALL:AREA:NETWORK_ERROR'\n};\n\nconst defaultState = {\n    isLoading: true,\n    areas: [],\n    errorMessage: ''\n};\n\nexport function areaReducer( state = defaultState, action ) {\n\n    const { type, data } = action;\n\n    switch ( type ) {\n\n        case actionsType.LOAD_DATA: {\n            return {\n                ...state,\n                isLoading: false,\n                areas: data\n            };\n\n        }\n\n        default : {\n            return state;\n        }\n\n    }\n\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { http } from '../modules';\nimport { actionsType } from '../store/ruducers/areaReducer';\nimport _ from 'lodash';\n\nfunction TaskAreaView( payload ) {\n\n\n   \n    const { areas, isLoading, errorMessage } = payload;\n\n    let view = null;\n    let hasDataShow = false;\n\n    if( isLoading ) {\n        view = 'Loading...';\n    } else if ( ! _.isEmpty( errorMessage ) ) {\n        view = errorMessage;\n    } else {\n        hasDataShow = true;\n        view = areas.map( (i) => {\n            return (\n                <li className='taskArea__listing__item' key={ i.areaId }>\n                    \n                    {/* <Link to='/listing'> */}\n                        <img\n                             src={`data:image/png;base64,${i.image}`}\n                            alt='img'\n                        />\n                        <div className='taskArea__listing__label'>{ i.areaName } &nbsp;&nbsp;</div>\n                    {/* </Link> */}\n                    <br/>\n                    <div ><img onClick={() => deleteArea(i.areaId)} src='/images/trash.svg' alt='approved' width=\"11px\"/></div>\n                    {/* {console.log(areas)} */}\n                    \n                </li>\n            );\n        });\n    }\n\n    return (\n        <div className='taskArea'>\n            <div className='card card--mb20'>\n                <div className='card__content'>\n                <h4 className='heading heading--h4'>Tasks Area</h4>\n                    <ul className={ `taskArea__listing ${ hasDataShow ? '' : 'taskArea__listing--textcenter' }` }>\n                        { view  }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nconst deleteArea = ( areaId ) => {\n    http.area.delete( areaId ).then( ( response ) => {\n        alert( response.message );\n        window.location.reload()\n    } );\n\n};\n\n\n\n\n\nexport default connect(\n    ({ areaReducer }) => {\n        return areaReducer;\n    }, ( dispatch ) => {\n\n        http.area.getAll().then((response) => {\n\n            dispatch( {\n                type: actionsType.LOAD_DATA,\n                data: response.payload.objectList\n            } );\n\n        }).catch( ( e ) => {\n            dispatch( {\n                type: actionsType.NETWORK_ERROR,\n                data: e.message\n            } );\n        } );\n\n        return {};\n\n    })(TaskAreaView);","export const actionsType = {\n    LOAD_DATA: 'ALL::CATEGORY:LOAD:DATA',\n    UPDATE_LOCATION: 'ALL::CATEGORY:UPDATE:LOCATION',\n    NETWORK_ERROR: 'ALL:CATEGORY:NETWORK_ERROR'\n};\n\nconst defaultState = {\n    isLoading: true,\n    categories: [],\n    errorMessage: ''\n};\n\nexport function categoryReducer( state = defaultState, action ) {\n\n    const { type, data } = action;\n\n    switch ( type ) {\n\n        case actionsType.LOAD_DATA: {\n            return {\n                ...state,\n                isLoading: false,\n                categories: data\n            };\n\n        }\n\n        default : {\n            return state;\n        }\n\n    }\n\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { http } from '../modules';\nimport { actionsType } from '../store/ruducers/categoryReducer';\nimport _ from 'lodash';\n\nfunction TaskCategoryView( payload ) {\n\n    const { categories, isLoading, errorMessage } = payload;\n\n    let view = null;\n    let hasDataShow = false;\n\n    if( isLoading ) {\n        view = 'Loading...';\n    } else if ( ! _.isEmpty( errorMessage ) ) {\n        view = errorMessage;\n    } else {\n        hasDataShow = true;\n        view = categories.map( (i) => {\n            return (\n                <li className='taskArea__listing__item' key={ i.categoryId }>\n                    {/* <Link to='/listing'> */}\n\n                        <img\n\n                            src={`data:image/png;base64,${i.image}`}\n                            alt='img'\n                        />\n                        \n                        \t\n\n                        <div className='taskArea__listing__label'>{ i.categoryName } </div>\n                        {/* {console.log(i.image)} */}\n                    {/* </Link> */}\n                    <br/>   \n                    <img onClick={() => deleteCategories(i.categoryId)} src='/images/trash.svg' alt='approved' width=\"11px\"/>\n                </li>\n            );\n        });\n    }\n\n    const deleteCategories = ( categoryId ) => {\n        http.category.delete(  categoryId ).then( ( response ) => {\n            alert( response.message );\n            window.location.reload()  \n        });\n    \n    };\n\n    return (\n        <div className='taskArea'>\n            <div className='card card--mb20'>\n                <div className='card__content'>\n                <h4 className='heading heading--h4'>Tasks Category</h4>\n                    <ul className={ `taskArea__listing ${ hasDataShow ? '' : 'taskArea__listing--textcenter' }` }>\n                        { view  }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default connect(\n    ({ categoryReducer }) => {\n        return categoryReducer;\n    }, ( dispatch ) => {\n\n        http.category.getAll().then((response) => {\n\n            dispatch( {\n                type: actionsType.LOAD_DATA,\n                data: response.payload.objectList\n            } );\n\n        }).catch( ( e ) => {\n            dispatch( {\n                type: actionsType.NETWORK_ERROR,\n                data: e.message\n            } );\n        } );\n\n        return {};\n\n    })(TaskCategoryView);\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { chart } from \"../modules\";\nimport { http } from \"../modules/http\";\n\nexport default function ChartView(props) {\n  const { chartType } = props;\n  const [state, setState] = useState({\n    isLoading: true,\n    chartData: [],\n  });\n  const _options = chart[chartType](state.chartData);\n\n  useEffect(() => {\n    http.chart[chartType]().then((response) => {\n      setState({ isLoading: false, chartData: response.payload.objectList });\n    });\n  }, []);\n\n  if (state.isLoading) {\n    return (\n      <div className=\"grid-inner\">\n        <div className=\"loader\" />\n      </div>\n    );\n  }\n\n  \nreturn state.chartData.length === 0 ? 'Loading...' : <HighchartsReact highcharts={Highcharts} options={_options} />;\n}\n\nChartView.defaultProps = {\n  chartType: \"pie\",\n};\n","import React, { useEffect } from \"react\";\nimport SubHeaderView from \"../views/SubHeaderView\";\nimport RecentTaskListView from \"../views/RecentTaskListView\";\nimport TaskAreaView from \"../views/TaskAreaView\";\nimport TaskCategoriesView from \"../views/TaskCategoriesView\";\nimport ChartView from \"../views/ChartView\";\nimport { http } from \"../modules\";\nimport axios from \"axios\";\n\nexport default function DashBoardPage() {\n  //backend requirenment nothing related to subheaderview\n  useEffect(() => {\n    axios\n      .get(\"https://covid-compliance-application.herokuapp.com/renewStatus\")\n      .then((res) => {\n        // console.log(\"its working\");\n      });\n  });\n\n  return (\n    <>\n      <SubHeaderView pageTitle=\"Dashboard\" />\n      <div className=\"container dashboard\">\n        <div className=\"grid\">\n          <div className=\"grid--6\">\n            <div className=\"card card--mb20\">\n              <div className=\"grid-inner\">\n                <h4 className=\"heading--h4\">Today Report</h4>\n                <a href=\"#\">\n                  {/* <img src='/images/download.svg' width='15' /> */}\n                  {/* <select className=\"inputField__select \">\n                    {\" \"}\n                    <option>Download Report</option>\n                  </select> */}\n                </a>\n              </div>\n              <ChartView chartType=\"pie\" />\n            </div>\n          </div>\n          <div className=\"grid--6\">\n            <div className=\"card card--mb20\">\n              <div className=\"grid-inner\">\n                <h4 className=\" heading--h4\">Task Report</h4>\n                <a href=\"#\">\n                  {/* <img src='/images/download.svg' width='15' /> */}\n                  {/* <select className=\"inputField__select \">\n                    {\" \"}\n                    <option>Download Report</option>\n                  </select> */}\n                </a>\n              </div>\n              <ChartView chartType=\"bar\" />\n            </div>\n          </div>\n        </div>\n        <TaskAreaView />\n        <TaskCategoriesView />\n        <div className=\"taskList\">\n          <RecentTaskListView />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function NotFoundPage( props ) {\n\n    return(\n        <div className='errorPage'>\n            <div className='errorPage__logo'>\n                <img src='/images/Logo-white.svg' width='150' alt='Xebia' />\n            </div>\n            <div className='errorPage__title'>404</div>\n            <div className='errorPage__message'>Oops! Something is wrong.</div>\n            <button className='btn btn__parimary' onClick={() => props.history.goBack()}>Go to initial page</button>\n        </div>\n    );\n\n}","import { combineReducers } from 'redux';\nimport { areaReducer } from './areaReducer';\nimport { locationReducer } from './locationReducer';\nimport { categoryReducer } from './categoryReducer';\n\nexport const rootReducers = combineReducers( {\n    areaReducer,\n    locationReducer,\n    categoryReducer\n} );","import { createStore } from 'redux';\nimport { rootReducers } from './ruducers/index';\n\nexport const rootStore = createStore( rootReducers );","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport AuthHoc from '../hoc/authHoc';\nimport LoginPage from './login';\nimport Dashboard from './dashboard';\nimport NotFoundPage from './error';\nimport Recentview from '../views/RecentTaskListView';\nimport { rootStore } from '../store/index';\n\nexport default function Init() {\n\n    return (\n        <Provider store={rootStore}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path='/' exact={true} render={(props) => {\n                        return (\n                            <AuthHoc {...props}>\n                                <LoginPage  {...props} />\n                            </AuthHoc>\n                        );\n                    }} />\n                    <Route path='/dashboard' exact={true} render={(props) => {\n                        return (\n                            <AuthHoc {...props}>\n                                <Dashboard  {...props} />\n                            </AuthHoc>\n                        );\n                    }} />\n                    <Route path='/recentview' exact={true} render={(props) => {\n                        return (\n                            <AuthHoc {...props}>\n                                <Recentview  {...props} />\n                            </AuthHoc>\n                        );\n                    }} />\n                    <Route path='/not-found' exact={true} render={(props) => {\n                        return (\n                            <NotFoundPage  {...props} />\n                        );\n                    }} />\n                    <Route path='*' exact={true} render={(props) => {\n                        return (\n                            <Redirect to='/not-found' />\n                        );\n                    }} />\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n    );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Init from './pages/index';\nimport '../src/scss/style.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Init />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}