{"ast":null,"code":"var _jsxFileName = \"/home/raghavsindhwani/Desktop/officalcovidapp/covidapplication/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport LoginPageView from '../views/LoginPageView';\nimport { http, storage } from '../modules';\nexport default class LoginPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isLoading: false,\n      userVerificationScreen: false,\n      isValidField: true,\n      username: '',\n      password: ''\n    });\n\n    _defineProperty(this, \"onInputChange\", payload => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), payload));\n    });\n\n    _defineProperty(this, \"onUserVerificationSubmit\", e => {\n      e.preventDefault();\n      this.setState({\n        isLoading: true\n      }, this.verifiedUserName);\n    });\n\n    _defineProperty(this, \"verifiedUserName\", () => {\n      const {\n        username\n      } = this.state;\n      http.userEmailVerification({\n        username\n      }).then(() => {\n        this.setState({\n          isLoading: false,\n          userVerificationScreen: true,\n          isValidField: true\n        });\n      }).catch(() => {\n        this.setState({\n          isLoading: false,\n          isValidField: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"onPasswordVerificationSubmit\", e => {\n      e.preventDefault();\n      this.setState({\n        isLoading: true\n      }, () => {\n        const {\n          password\n        } = this.state;\n        http.userPasswordVerification({\n          password\n        }).then(res => {\n          const {\n            token,\n            user\n          } = res.payload;\n          storage.token.set(token);\n          storage.userInfo.set(user);\n          this.props.Router.push('/dashboard');\n        }).catch(() => {\n          this.setState({\n            isLoading: false,\n            isValidField: false\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    return __jsx(LoginPageView, _extends({}, this.state, {\n      onInputChange: this.onInputChange,\n      onUserVerificationSubmit: this.onUserVerificationSubmit,\n      verifiedUserName: this.verifiedUserName,\n      onPasswordVerificationSubmit: this.onPasswordVerificationSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/raghavsindhwani/Desktop/officalcovidapp/covidapplication/pages/index.js"],"names":["React","LoginPageView","http","storage","LoginPage","Component","isLoading","userVerificationScreen","isValidField","username","password","payload","setState","state","e","preventDefault","verifiedUserName","userEmailVerification","then","catch","userPasswordVerification","res","token","user","set","userInfo","props","Router","push","render","onInputChange","onUserVerificationSubmit","onPasswordVerificationSubmit"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,YAA9B;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAE3C;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,sBAAsB,EAAE,KAFpB;AAGJC,MAAAA,YAAY,EAAE,IAHV;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,QAAQ,EAAE;AALN,KAF2C;;AAAA,2CAWlCC,OAAD,IAAa;AACzB,WAAKC,QAAL,iCAAmB,KAAKC,KAAxB,GAAkCF,OAAlC;AACH,KAbkD;;AAAA,sDAevBG,CAAD,IAAO;AAC9BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,KAAKU,gBAAxC;AAEH,KAnBkD;;AAAA,8CAqBhC,MAAM;AACrB,YAAM;AAAEP,QAAAA;AAAF,UAAe,KAAKI,KAA1B;AACAX,MAAAA,IAAI,CAACe,qBAAL,CAA2B;AAAER,QAAAA;AAAF,OAA3B,EAAyCS,IAAzC,CAA8C,MAAM;AAEhD,aAAKN,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAAE,KAAb;AAAoBC,UAAAA,sBAAsB,EAAE,IAA5C;AAAkDC,UAAAA,YAAY,EAAE;AAAhE,SAAd;AAEH,OAJD,EAIGW,KAJH,CAIS,MAAM;AACX,aAAKP,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAAE,KAAb;AAAoBE,UAAAA,YAAY,EAAE;AAAlC,SAAd;AACH,OAND;AAOH,KA9BkD;;AAAA,0DAgCnBM,CAAD,IAAO;AAClCA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,MAAM;AAErC,cAAM;AAAEI,UAAAA;AAAF,YAAe,KAAKG,KAA1B;AACAX,QAAAA,IAAI,CAACkB,wBAAL,CAA8B;AAAEV,UAAAA;AAAF,SAA9B,EAA4CQ,IAA5C,CAAmDG,GAAF,IAAW;AAExD,gBAAM;AAAEC,YAAAA,KAAF;AAASC,YAAAA;AAAT,cAAkBF,GAAG,CAACV,OAA5B;AACAR,UAAAA,OAAO,CAACmB,KAAR,CAAcE,GAAd,CAAmBF,KAAnB;AACAnB,UAAAA,OAAO,CAACsB,QAAR,CAAiBD,GAAjB,CAAsBD,IAAtB;AAEA,eAAKG,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,YAAvB;AAEH,SARD,EAQGT,KARH,CAQS,MAAM;AACX,eAAKP,QAAL,CAAc;AAAEN,YAAAA,SAAS,EAAE,KAAb;AAAoBE,YAAAA,YAAY,EAAE;AAAlC,WAAd;AACH,SAVD;AAYH,OAfD;AAiBH,KAnDkD;AAAA;;AAqDnDqB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,aAAD,eACQ,KAAKhB,KADb;AAEI,MAAA,aAAa,EAAE,KAAKiB,aAFxB;AAGI,MAAA,wBAAwB,EAAE,KAAKC,wBAHnC;AAII,MAAA,gBAAgB,EAAE,KAAKf,gBAJ3B;AAKI,MAAA,4BAA4B,EAAG,KAAKgB,4BALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AASH;;AA/DkD","sourcesContent":["import React from 'react';\nimport LoginPageView from '../views/LoginPageView';\nimport { http, storage } from '../modules';\n\nexport default class LoginPage extends React.Component {\n\n    state = {\n        isLoading: false,\n        userVerificationScreen: false,\n        isValidField: true,\n        username: '',\n        password: ''\n    }\n\n\n    onInputChange = (payload) => {\n        this.setState({ ...this.state, ...payload });\n    }\n\n    onUserVerificationSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ isLoading: true }, this.verifiedUserName);\n\n    }\n\n    verifiedUserName = () => {\n        const { username } = this.state;\n        http.userEmailVerification({ username }).then(() => {\n\n            this.setState({ isLoading: false, userVerificationScreen: true, isValidField: true });\n\n        }).catch(() => {\n            this.setState({ isLoading: false, isValidField: false });\n        });\n    }\n\n    onPasswordVerificationSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ isLoading: true }, () => {\n\n            const { password } = this.state;\n            http.userPasswordVerification({ password }).then(( res ) => {\n\n                const { token, user } = res.payload;\n                storage.token.set( token );\n                storage.userInfo.set( user );\n\n                this.props.Router.push('/dashboard');\n    \n            }).catch(() => {\n                this.setState({ isLoading: false, isValidField: false });\n            });\n\n        });\n\n    }\n\n    render() {\n        return (\n            <LoginPageView\n                {...this.state}\n                onInputChange={this.onInputChange}\n                onUserVerificationSubmit={this.onUserVerificationSubmit}\n                verifiedUserName={this.verifiedUserName}\n                onPasswordVerificationSubmit={ this.onPasswordVerificationSubmit }\n            />\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}