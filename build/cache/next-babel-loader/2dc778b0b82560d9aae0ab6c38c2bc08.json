{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cloneDeepWith } from \"lodash\";\nconst options = {\n  credits: {\n    enabled: false\n  },\n  legend: {\n    symbolHeight: 10,\n    symbolWidth: 10,\n    symbolRadius: 10,\n    verticalAlign: 'bottom',\n    itemDistance: 5,\n    itemMarginTop: 5,\n    itemHoverStyle: {\n      color: '#000'\n    },\n    itemStyle: {\n      color: '#999',\n      fontSize: '10px',\n      lineHeight: 20\n    }\n  },\n  tooltip: {\n    pointFormat: '<b>{point.y}</b>'\n  },\n  chart: {\n    plotShadow: false,\n    backgroundColor: null,\n    plotBorderWidth: 0,\n    height: 250\n  },\n  title: {\n    text: ''\n  }\n};\nexport const chart = {\n  pie() {\n    let _options = _objectSpread(_objectSpread({}, options), {}, {\n      chart: _objectSpread(_objectSpread({}, options.chart), {}, {\n        type: \"pie\"\n      }),\n      plotOptions: {\n        pie: {\n          dataLabels: {\n            enabled: false\n          },\n          borderWidth: 0,\n          colors: [\"#66ff66\", \"#06A99C\", \"#b300b3\"],\n          showInLegend: true\n        }\n      },\n      series: [{\n        data: [['Pending', 10], ['Completed', 10], ['Upcoming', 10]]\n      }]\n    });\n\n    return _options;\n  },\n\n  bar() {\n    let _options = _objectSpread(_objectSpread({}, options), {}, {\n      chart: _objectSpread(_objectSpread({}, options.chart), {}, {\n        type: \"column\"\n      }),\n      tooltip: {\n        pointFormat: '<span style=\"font-size:9px;\">{series.name}</span>: <b>{point.y}</b><br/>'\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n          borderWidth: 0,\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      xAxis: {\n        categories: ['Mon', 'Tue', 'Web', 'Thu', 'Fri']\n      },\n      yAxis: {\n        title: {\n          text: \"\"\n        },\n        labels: {\n          enabled: false\n        },\n        gridLineWidth: 0\n      },\n      series: [{\n        name: 'Pending',\n        color: '#66ff66',\n        data: [5, 3, 4, 7, 2]\n      }, {\n        name: 'Completed',\n        color: '#06A99C',\n        data: [2, 2, 3, 2, 1]\n      }, {\n        name: 'Upcoming',\n        color: '#b300b3',\n        data: [3, 4, 4, 2, 5]\n      }]\n    });\n\n    return _options;\n  }\n\n};","map":{"version":3,"sources":["/home/raghavsindhwani/Desktop/officalcovidapp/covidapplication/modules/charts.js"],"names":["cloneDeepWith","options","credits","enabled","legend","symbolHeight","symbolWidth","symbolRadius","verticalAlign","itemDistance","itemMarginTop","itemHoverStyle","color","itemStyle","fontSize","lineHeight","tooltip","pointFormat","chart","plotShadow","backgroundColor","plotBorderWidth","height","title","text","pie","_options","type","plotOptions","dataLabels","borderWidth","colors","showInLegend","series","data","bar","column","stacking","xAxis","categories","yAxis","labels","gridLineWidth","name"],"mappings":"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","sourcesContent":[" import { cloneDeepWith } from \"lodash\";\n\nconst options = {\n    credits: {\n        enabled: false\n    },\n    legend: {\n        symbolHeight: 10,\n        symbolWidth: 10,\n        symbolRadius: 10,\n        verticalAlign: 'bottom',\n        itemDistance: 5,\n        itemMarginTop: 5,\n        itemHoverStyle: {\n            color: '#000',\n        },\n        itemStyle: {\n            color: '#999',\n            fontSize: '10px',\n            lineHeight: 20,\n        }\n    },\n    tooltip: {\n        pointFormat: '<b>{point.y}</b>'\n    },\n    chart: {\n        plotShadow: false,\n        backgroundColor: null,\n        plotBorderWidth: 0,\n        height: 250,\n    },\n    title: {\n        text: ''\n    }\n};\n\nexport const chart = {\n    pie() {\n\n        let _options = {\n            ...options,\n            chart: {\n                ...options.chart,\n                type: \"pie\"\n            },\n            plotOptions: {\n                pie: {\n                    dataLabels: {\n                        enabled: false\n                    },\n                    borderWidth: 0,\n                    colors: [\"#66ff66\", \"#06A99C\", \"#b300b3\"],\n                    showInLegend: true\n                }\n            },\n            series: [{ data: [['Pending', 10], ['Completed', 10], ['Upcoming', 10]] }]\n        };\n\n        return _options;\n    },\n    bar() {\n\n        let _options = {\n            ...options,\n            chart: {\n                ...options.chart,\n                type: \"column\"\n            },\n            tooltip: {\n                pointFormat:\n                    '<span style=\"font-size:9px;\">{series.name}</span>: <b>{point.y}</b><br/>'\n            },\n            plotOptions: {\n                column: {\n                    stacking: \"normal\",\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true\n                    }\n                }\n            },\n            xAxis: {\n                categories: [ 'Mon', 'Tue', 'Web', 'Thu', 'Fri' ]\n            },\n            yAxis: {\n                title: {\n                    text: \"\"\n                },\n                labels: {\n                    enabled: false\n                },\n                gridLineWidth: 0\n            },\n            series: [{\n                name: 'Pending',\n                color: '#66ff66',\n                data: [5, 3, 4, 7, 2]\n            }, {\n                name: 'Completed',\n                color: '#06A99C',\n                data: [2, 2, 3, 2, 1]\n            }, {\n                name: 'Upcoming',\n                color: '#b300b3',\n                data: [3, 4, 4, 2, 5]\n            }]\n        };\n\n        return _options;\n\n    }\n};"]},"metadata":{},"sourceType":"module"}