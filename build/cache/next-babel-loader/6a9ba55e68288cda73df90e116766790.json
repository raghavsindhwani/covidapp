{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { isEmpty, noop } from 'lodash';\n\nvar OpenCloseHoc = /*#__PURE__*/function (_React$Component) {\n  _inherits(OpenCloseHoc, _React$Component);\n\n  var _super = _createSuper(OpenCloseHoc);\n\n  function OpenCloseHoc(props) {\n    var _this;\n\n    _classCallCheck(this, OpenCloseHoc);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleClick\", function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    });\n\n    _this.state = {\n      isOpen: props.isOpen\n    };\n    _this.ref = React.createRef();\n\n    _this.props.parentRef(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(OpenCloseHoc, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.isOpen !== nextProps.isOpen) {\n        this.setState({\n          isOpen: nextProps.isOpen\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!isEmpty(this.ref.current)) {\n        this.onBodyClick();\n      }\n    }\n  }, {\n    key: \"onBodyClick\",\n    value: function onBodyClick() {\n      var _this2 = this;\n\n      document.addEventListener('click', function (e) {\n        if (!isEmpty(_this2.ref.current)) {\n          var _isOutSide = _this2.ref.current.contains(e.target);\n\n          if (!_isOutSide) {\n            _this2.setState({\n              isOpen: false\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.render(_objectSpread(_objectSpread({}, this.state), {}, {\n        onHandleClick: this.onHandleClick,\n        ref: this.ref\n      }));\n    }\n  }]);\n\n  return OpenCloseHoc;\n}(React.Component);\n\nexport { OpenCloseHoc as default };\nOpenCloseHoc.defaultProps = {\n  isOpen: false,\n  parentRef: noop\n};","map":{"version":3,"sources":["/home/raghavsindhwani/Desktop/officalcovidapp/covidapplication/hoc/openCloseHoc.jsx"],"names":["React","isEmpty","noop","OpenCloseHoc","props","setState","isOpen","state","ref","createRef","parentRef","nextProps","current","onBodyClick","document","addEventListener","e","_isOutSide","contains","target","render","onHandleClick","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,QAA9B;;IAEqBC,Y;;;;;AAEjB,wBAAaC,KAAb,EAAqB;AAAA;;AAAA;;AACjB,8BAAOA,KAAP;;AADiB,oEAqBL,YAAM;AAClB,YAAKC,QAAL,CAAe;AAAEC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAtB,OAAf;AACH,KAvBoB;;AAEjB,UAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAEF,KAAK,CAACE;AADL,KAAb;AAGA,UAAKE,GAAL,GAAWR,KAAK,CAACS,SAAN,EAAX;;AACA,UAAKL,KAAL,CAAWM,SAAX;;AANiB;AAOpB;;;;8CAE0BC,S,EAAY;AACnC,UAAI,KAAKP,KAAL,CAAWE,MAAX,KAAsBK,SAAS,CAACL,MAApC,EAA6C;AACzC,aAAKD,QAAL,CAAe;AAAEC,UAAAA,MAAM,EAAEK,SAAS,CAACL;AAApB,SAAf;AACH;AACJ;;;wCAEmB;AAChB,UAAI,CAAEL,OAAO,CAAE,KAAKO,GAAL,CAASI,OAAX,CAAb,EAAoC;AAChC,aAAKC,WAAL;AACH;AACJ;;;kCAMa;AAAA;;AACVC,MAAAA,QAAQ,CAACC,gBAAT,CAA2B,OAA3B,EAAoC,UAAEC,CAAF,EAAS;AAEzC,YAAI,CAAEf,OAAO,CAAE,MAAI,CAACO,GAAL,CAASI,OAAX,CAAb,EAAoC;AAEhC,cAAMK,UAAU,GAAG,MAAI,CAACT,GAAL,CAASI,OAAT,CAAiBM,QAAjB,CAA2BF,CAAC,CAACG,MAA7B,CAAnB;;AACA,cAAI,CAAEF,UAAN,EAAmB;AACf,YAAA,MAAI,CAACZ,QAAL,CAAe;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAf;AACH;AACJ;AAEJ,OAVD;AAWH;;;6BAEQ;AACL,aAAO,KAAKF,KAAL,CAAWgB,MAAX,iCACA,KAAKb,KADL;AAEHc,QAAAA,aAAa,EAAE,KAAKA,aAFjB;AAGHb,QAAAA,GAAG,EAAE,KAAKA;AAHP,SAAP;AAKH;;;;EA/CqCR,KAAK,CAACsB,S;;SAA3BnB,Y;AAmDrBA,YAAY,CAACoB,YAAb,GAA4B;AACxBjB,EAAAA,MAAM,EAAE,KADgB;AAExBI,EAAAA,SAAS,EAAER;AAFa,CAA5B","sourcesContent":["import React from 'react';\nimport { isEmpty, noop } from 'lodash';\n\nexport default class OpenCloseHoc extends React.Component{\n\n    constructor( props ) {\n        super( props );\n        this.state = {\n            isOpen: props.isOpen\n        };\n        this.ref = React.createRef();\n        this.props.parentRef( this );\n    }\n\n    componentWillReceiveProps( nextProps ) {\n        if( this.props.isOpen !== nextProps.isOpen ) {\n            this.setState( { isOpen: nextProps.isOpen } );\n        }\n    }\n\n    componentDidMount() {\n        if( ! isEmpty( this.ref.current ) ) {\n            this.onBodyClick();\n        }\n    }\n\n    onHandleClick = () => {\n        this.setState( { isOpen: !this.state.isOpen } );\n    }\n\n    onBodyClick() {\n        document.addEventListener( 'click', ( e ) => {\n            \n            if( ! isEmpty( this.ref.current ) ) {\n                \n                const _isOutSide = this.ref.current.contains( e.target );\n                if( ! _isOutSide ) {\n                    this.setState( { isOpen: false } );\n                }\n            }\n\n        } );\n    }\n\n    render() {\n        return this.props.render( {\n            ...this.state,\n            onHandleClick: this.onHandleClick,\n            ref: this.ref\n        } );\n    }\n\n}\n\nOpenCloseHoc.defaultProps = {\n    isOpen: false,\n    parentRef: noop\n};"]},"metadata":{},"sourceType":"module"}