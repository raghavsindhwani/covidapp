{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { isEmpty, noop } from 'lodash';\nexport default class OpenCloseHoc extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onHandleClick\", () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    });\n\n    this.state = {\n      isOpen: props.isOpen\n    };\n    this.ref = React.createRef();\n    this.props.parentRef(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.isOpen !== nextProps.isOpen) {\n      this.setState({\n        isOpen: nextProps.isOpen\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (!isEmpty(this.ref.current)) {\n      this.onBodyClick();\n    }\n  }\n\n  onBodyClick() {\n    document.addEventListener('click', e => {\n      if (!isEmpty(this.ref.current)) {\n        const _isOutSide = this.ref.current.contains(e.target);\n\n        if (!_isOutSide) {\n          this.setState({\n            isOpen: false\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return this.props.render(_objectSpread(_objectSpread({}, this.state), {}, {\n      onHandleClick: this.onHandleClick,\n      ref: this.ref\n    }));\n  }\n\n}\nOpenCloseHoc.defaultProps = {\n  isOpen: false,\n  parentRef: noop\n};","map":{"version":3,"sources":["/home/raghavsindhwani/Desktop/officalcovidapp/covidapplication/hoc/openCloseHoc.jsx"],"names":["React","isEmpty","noop","OpenCloseHoc","Component","constructor","props","setState","isOpen","state","ref","createRef","parentRef","componentWillReceiveProps","nextProps","componentDidMount","current","onBodyClick","document","addEventListener","e","_isOutSide","contains","target","render","onHandleClick","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,QAA9B;AAEA,eAAe,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AAErDC,EAAAA,WAAW,CAAEC,KAAF,EAAU;AACjB,UAAOA,KAAP;;AADiB,2CAqBL,MAAM;AAClB,WAAKC,QAAL,CAAe;AAAEC,QAAAA,MAAM,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAtB,OAAf;AACH,KAvBoB;;AAEjB,SAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAEF,KAAK,CAACE;AADL,KAAb;AAGA,SAAKE,GAAL,GAAWV,KAAK,CAACW,SAAN,EAAX;AACA,SAAKL,KAAL,CAAWM,SAAX,CAAsB,IAAtB;AACH;;AAEDC,EAAAA,yBAAyB,CAAEC,SAAF,EAAc;AACnC,QAAI,KAAKR,KAAL,CAAWE,MAAX,KAAsBM,SAAS,CAACN,MAApC,EAA6C;AACzC,WAAKD,QAAL,CAAe;AAAEC,QAAAA,MAAM,EAAEM,SAAS,CAACN;AAApB,OAAf;AACH;AACJ;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAEd,OAAO,CAAE,KAAKS,GAAL,CAASM,OAAX,CAAb,EAAoC;AAChC,WAAKC,WAAL;AACH;AACJ;;AAMDA,EAAAA,WAAW,GAAG;AACVC,IAAAA,QAAQ,CAACC,gBAAT,CAA2B,OAA3B,EAAsCC,CAAF,IAAS;AAEzC,UAAI,CAAEnB,OAAO,CAAE,KAAKS,GAAL,CAASM,OAAX,CAAb,EAAoC;AAEhC,cAAMK,UAAU,GAAG,KAAKX,GAAL,CAASM,OAAT,CAAiBM,QAAjB,CAA2BF,CAAC,CAACG,MAA7B,CAAnB;;AACA,YAAI,CAAEF,UAAN,EAAmB;AACf,eAAKd,QAAL,CAAe;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAf;AACH;AACJ;AAEJ,KAVD;AAWH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKlB,KAAL,CAAWkB,MAAX,iCACA,KAAKf,KADL;AAEHgB,MAAAA,aAAa,EAAE,KAAKA,aAFjB;AAGHf,MAAAA,GAAG,EAAE,KAAKA;AAHP,OAAP;AAKH;;AA/CoD;AAmDzDP,YAAY,CAACuB,YAAb,GAA4B;AACxBlB,EAAAA,MAAM,EAAE,KADgB;AAExBI,EAAAA,SAAS,EAAEV;AAFa,CAA5B","sourcesContent":["import React from 'react';\nimport { isEmpty, noop } from 'lodash';\n\nexport default class OpenCloseHoc extends React.Component{\n\n    constructor( props ) {\n        super( props );\n        this.state = {\n            isOpen: props.isOpen\n        };\n        this.ref = React.createRef();\n        this.props.parentRef( this );\n    }\n\n    componentWillReceiveProps( nextProps ) {\n        if( this.props.isOpen !== nextProps.isOpen ) {\n            this.setState( { isOpen: nextProps.isOpen } );\n        }\n    }\n\n    componentDidMount() {\n        if( ! isEmpty( this.ref.current ) ) {\n            this.onBodyClick();\n        }\n    }\n\n    onHandleClick = () => {\n        this.setState( { isOpen: !this.state.isOpen } );\n    }\n\n    onBodyClick() {\n        document.addEventListener( 'click', ( e ) => {\n            \n            if( ! isEmpty( this.ref.current ) ) {\n                \n                const _isOutSide = this.ref.current.contains( e.target );\n                if( ! _isOutSide ) {\n                    this.setState( { isOpen: false } );\n                }\n            }\n\n        } );\n    }\n\n    render() {\n        return this.props.render( {\n            ...this.state,\n            onHandleClick: this.onHandleClick,\n            ref: this.ref\n        } );\n    }\n\n}\n\nOpenCloseHoc.defaultProps = {\n    isOpen: false,\n    parentRef: noop\n};"]},"metadata":{},"sourceType":"module"}