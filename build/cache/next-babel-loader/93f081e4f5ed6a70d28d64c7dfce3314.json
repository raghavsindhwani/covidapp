{"ast":null,"code":"import Axios from 'axios';\nAxios.defaults.baseURL = 'https://covid-compliance-application.herokuapp.com';\nAxios.interceptors.response.use(function (response) {\n  return Promise.resolve(response.data);\n}, function (error) {\n  if (error.message === 'Network Error' && !error.response) {\n    Promise.reject({\n      status: 'failure',\n      message: 'Network Not found.'\n    });\n  } else {\n    return Promise.reject(error.response.data);\n  }\n});\nexport var http = {\n  userEmailVerification: function userEmailVerification(data) {\n    return Axios.post('/username', data);\n  },\n  userPasswordVerification: function userPasswordVerification(data) {\n    return Axios.post('/password', data);\n  }\n};","map":{"version":3,"sources":["/home/raghavsindhwani/Desktop/officalcovidapp/covidapplication/modules/http.js"],"names":["Axios","defaults","baseURL","interceptors","response","use","Promise","resolve","data","error","message","reject","status","http","userEmailVerification","post","userPasswordVerification"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,oDAAzB;AACAF,KAAK,CAACG,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAiC,UAAUD,QAAV,EAAoB;AAEjD,SAAOE,OAAO,CAACC,OAAR,CAAiBH,QAAQ,CAACI,IAA1B,CAAP;AAEH,CAJD,EAIG,UAASC,KAAT,EAAe;AAEd,MAAIA,KAAK,CAACC,OAAN,KAAkB,eAAlB,IAAqC,CAACD,KAAK,CAACL,QAAhD,EAA0D;AAEtDE,IAAAA,OAAO,CAACK,MAAR,CAAe;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXF,MAAAA,OAAO,EAAE;AAFE,KAAf;AAKH,GAPD,MAOO;AACH,WAAOJ,OAAO,CAACK,MAAR,CAAeF,KAAK,CAACL,QAAN,CAAeI,IAA9B,CAAP;AACH;AAEJ,CAjBD;AAmBA,OAAO,IAAMK,IAAI,GAAG;AAChBC,EAAAA,qBADgB,iCACMN,IADN,EACY;AACxB,WAAOR,KAAK,CAACe,IAAN,CAAW,WAAX,EAAwBP,IAAxB,CAAP;AACH,GAHe;AAIhBQ,EAAAA,wBAJgB,oCAISR,IAJT,EAIe;AAC3B,WAAOR,KAAK,CAACe,IAAN,CAAW,WAAX,EAAwBP,IAAxB,CAAP;AACH;AANe,CAAb","sourcesContent":["import Axios from 'axios';\nAxios.defaults.baseURL = 'https://covid-compliance-application.herokuapp.com';\nAxios.interceptors.response.use( function( response ){\n\n    return Promise.resolve( response.data );\n\n}, function(error){\n\n    if (error.message === 'Network Error' && !error.response) {\n\n        Promise.reject({\n            status: 'failure',\n            message: 'Network Not found.'\n        });\n\n    } else {\n        return Promise.reject(error.response.data);\n    }\n\n});\n\nexport const http = {\n    userEmailVerification(data) {\n        return Axios.post('/username', data);\n    },\n    userPasswordVerification(data) {\n        return Axios.post('/password', data);\n    }\n}"]},"metadata":{},"sourceType":"module"}